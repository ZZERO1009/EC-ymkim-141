/**
******************************************************************************
* @author  EC tutorial
* @Mod		 Young-Min Kim
* @brief   Embedded Controller
******************************************************************************
*/



#include "..\..\lib\ecRCC.h"
#include "..\..\lib\ecGPIO.h"
#include "..\..\lib\ecEXTI.h"

unsigned int cnt = 0;
int buttonState = 0;
int lastButtonState = 0;
void updateDisplay(void);
void setup(void);



#define MCU_CLK_PLL 16000000
#define MCU_CLK_HSI 16000000


void setup(void);

int main(void) {
	setup();
	 while (1);
	   }


void EXTI15_10_IRQHandler(void) {
	if ((EXTI->PR & EXTI_PR_PR13) == EXTI_PR_PR13) {
		             cnt++;
            if (cnt > 9) {
                cnt = 0;
            }
        }
        lastButtonState = buttonState;
        updateDisplay();
				
		EXTI->PR |= EXTI_PR_PR13; // cleared by writing '1'
	}



// Initialiization 
void setup(void)
{
	
	RCC_PLL_init();                         // System Clock = 84MHz
	// Initialize GPIOA_5 for Output
	GPIO_init(GPIOA, LED_PIN, OUTPUT);    // calls RCC_GPIOA_enable()	
	GPIO_ospeed(GPIOA, LED_PIN, 1UL);
	// Initialize GPIOC_13 for Input Button
	GPIO_init(GPIOC, BUTTON_PIN, INPUT);  // calls RCC_GPIOC_enable()
	  sevensegment_init(GPIOA, SEG_A_PIN, 1UL);
    sevensegment_init(GPIOB, SEG_B_PIN, 1UL);
    sevensegment_init(GPIOC, SEG_C_PIN, 1UL);
    sevensegment_init(GPIOA, SEG_D_PIN, 1UL);
	  EXTI_enable(13);
		EXTI_init(GPIOC, BUTTON_PIN, FALL,13);
		
}
void updateDisplay(void) {
    sevensegment_decoder(cnt);
}